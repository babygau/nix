{:profiles
 {:babygau {;; NOTE `:delay` and `:held` should be equal for `Mod-Tap`
            :default true
            :sim 50
            :delay 135
            :held 135
            :alone 130}}
 ;; Create alias key for `:to`
 :tos {:hyper {:key :left_control :modi {:mandatory [:left_command :left_shift :left_option]}}
       :app-switcher {:key :tab :modi [:left_command] :lazy true}}

 :templates {:launch "osascript -e 'tell application \"%s\" to activate'"
             :open   "open \"%s\""
             :show   "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'\n"
             :toggle "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else if frontmost of process appName then\n    set visible of process appName to false\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'"
             :notify "osascript -e 'display notification \"%s\" with title \"Debug!\"'"
             :notify-layout "osascript -e 'display notification \"%s\" with title \"Yabai\"'"}
 :layers {}
 :simlayers {}
 ;; Main contains multiple manipulators
 :main [{:des "Hyper Layout"
         :rules [;; Remap `caps_lock` key to hyper key, escape when pressed alone
                 [:##caps_lock :hyper nil {:alone :escape}]
                 ;; Move like Vim
                 [:!!j :down_arrow]
                 [:!!k :up_arrow]
                 [:!!h :left_arrow]
                 [:!!l :right_arrow]]}
        {:des "C-n/C-p to Down/Up"
         :rules [:Browsers
                 [:!Tp :up_arrow]
                 [:!Tn :down_arrow]
                 :Element
                 [:!Tp :up_arrow]
                 [:!Tn :down_arrow]]}
        {:des "Mod-Tap Layout"
         ;; NOTE when adding a new layer, if you want it to be able to cross with an old one,
         ;; you must add the name negated (:!new_name) to all other mod-tap layer conditions
         :rules [;; s-mode init
                 [:s nil [:!d-mode :!f-mode :!g-mode]
                  {:alone {:key :s :halt true}
                   :delayed {:canceled {:key :s}}
                   :held {:set ["s-mode" 1] :repeat false}
                   :afterup {:set ["s-mode" 0]}}]
                 ;; d-mode init
                 [:d nil [:!s-mode :!f-mode :!g-mode]
                  {:alone {:key :d :halt true}
                   :delayed {:canceled {:key :d}}
                   :held {:set ["d-mode" 1] :repeat false}
                   :afterup {:set ["d-mode" 0]}}]
                 ;; f-mode init
                 [:f nil [:!s-mode :!d-mode :!g-mode]
                  {:alone {:key :f :halt true}
                   :delayed {:canceled {:key :f}}
                   :held {:set ["f-mode" 1] :repeat false}
                   :afterup {:set ["f-mode" 0]}}]
                 ;; g-mode init
                 [:g nil [:!s-mode :!d-mode :!f-mode]
                  {:alone {:key :g :halt true}
                   :delayed {:canceled {:key :g}}
                   :held {:set ["g-mode" 1] :repeat false}
                   :afterup {:set ["g-mode" 0]}}]

                 ;; Reserved
                 ;; :s-mode

                 :d-mode
                 ;;;;Yabai babe
                 [:spacebar ["yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == \"bsp\" then \"float\" else \"bsp\" end')" [:notify-layout "Cycle Layout"]]]
                 ;; Cycle through windows
                 ;; SEE: https://github.com/koekeishiya/yabai/issues/203#issuecomment-700527407
                 [:j "~/.config/yabai/cycle-backward.sh"]
                 [:k "~/.config/yabai/cycle-forward.sh"]
                 ;; Resize windows
                 [:h "yabai -m window west --resize right:-40:0 2> /dev/null || yabai -m window --resize right:-40:0"]
                 [:l "yabai -m window east --resize left:40:0 2> /dev/null || yabai -m window --resize left:40:0"]
                 ;; Rotate tree
                 [:o "yabai -m space --rotate 90"]
                 ;; Mirror y axis
                 ;; [:y "yabai -m space --mirror y-axis"]
                 ;; Mirror x axis
                 ;; [:x "yabai -m space --mirror x-axis"]
                 ;; Split horizontal/vertical windows
                 [:v "yabai -m window --toggle split"]
                 ;; Move windows
                 [:return_or_enter "~/.config/yabai/stack.sh west"]
                 [:down_arrow "~/.config/yabai/stack.sh south"]
                 [:left_arrow "~/.config/yabai/stack.sh west"]
                 [:up_arrow "~/.config/yabai/stack.sh north"]
                 [:right_arrow "~/.config/yabai/stack.sh east"]
                 ;; Resize float windows
                 [:9 "yabai -m window --grid 1:1:0:0:1:1"]
                 [:8 "yabai -m window --grid 8:8:1:1:6:6"]
                 [:7 "yabai -m window --grid 1:2:0:0:1:1"]
                 [:0 "yabai -m window --grid 1:2:1:0:1:1"]
                 ;; Quick focus spaces with Yabai
                 [:p "yabai -m space --focus prev"]
                 [:n "yabai -m space --focus next"]
                 ;; Send windows and focus to spaces
                 [:quote "yabai -m window --space next && yabai -m space --focus next"]
                 [:semicolon "yabai -m window --space prev && yabai -m space --focus prev"]
                 ;; Switch layouts
                 [:b ["yabai -m space --layout bsp" [:notify-layout "BSP Layout"]]]
                 [:s ["yabai -m space --layout stack" [:notify-layout "Fullscreen Stack Layout"]]]
                 [:f ["yabai -m space --layout float" [:notify-layout "Float Layout"]]]

                 ;; ;;;; Amethyst keybindings
                 ;; :d-mode
                 ;; ;; Cycle layouts
                 ;; [:spacebar :!SOspacebar]
                 ;; ;; Shrink and expand main pain
                 ;; [:h :!SOh]
                 ;; [:l :!SOl]
                 ;; ;; Cycle focus window
                 ;; [:j :!SOj]
                 ;; [:k :!SOk]
                 ;; ;; Focus to main window
                 ;; [:m :!SOm]
                 ;; ;; Swap focused window with main window
                 ;; [:return_or_enter :!SOreturn_or_enter]
                 ;; ;; Move to space left or right
                 ;; [:p :!Tleft_arrow]
                 ;; [:n :!Tright_arrow]
                 ;; ;; Force window to be reevaluated
                 ;; [:z :!SOz]
                 ;; ;; Throw focused window to space left or right
                 ;; [:quote :!SOTright_arrow]
                 ;; [:semicolon :!SOTleft_arrow]

                 ;;;; App navigation
                 :g-mode
                 ;; Discord
                 [:slash :!Cslash :Discord]
                 [:spacebar :!Ck :Discord]
                 [:j :!Odown_arrow :Discord]
                 [:k :!Oup_arrow :Discord]
                 [:l :!COdown_arrow :Discord]
                 [:h :!COup_arrow :Discord]
                 [:quote :page_down :Discord]
                 [:semicolon :page_up :Discord]
                 [:m :!Spage_down :Discord]
                 [:i :!Ce :Discord]
                 [:y :!Cg :Discord]
                 ;; Element
                 [:slash :!Cslash :Element]
                 [:spacebar :!Ck :Element]
                 [:j :!Odown_arrow :Element]
                 [:k :!Oup_arrow :Element]
                 [:l :!SOdown_arrow :Element]
                 [:h :!SOup_arrow :Element]
                 [:quote :page_down :Element]
                 [:semicolon :page_up :Element]
                 [:m :!Tend :Element]
                 [:n :!Thome :Element]
                 ;; Messenger
                 [:spacebar :!Ck :Messenger]
                 [:j :!Cclose_bracket :Messenger]
                 [:k :!Copen_bracket :Messenger]

                 ;;;; Vim-like keybindings
                 :f-mode
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:h :left_arrow]
                 [:l :right_arrow]]}

        {:des "Windows-like Shortcuts"
         ;; Copy/Paste/Undo/Redo
         :rules [:!Terminals
                 [:!Ta :!Ca :!Emacs]
                 [:!Tc :!Cc :!Emacs]
                 [:!Tv :!Cv :!Emacs]
                 [:!Tu :!Cz :!Emacs]
                 [:!Tr :!CSz :!Emacs]]}

        {:des "Remap <C-t> to <C-`> for iTerm"
         :rules [[:!Tgrave_accent_and_tilde :!Tt :Terminals]]}

        {:des "Remap `a` and `semicolon` to `ctrl` key"
         :rules [[:a nil [:!s-mode :!d-mode :!f-mode :!g-mode]
                  {:alone {:key :a :halt true}
                   :delayed {:canceled {:key :a}}
                   :held {:key :left_control :lazy :true}}]
                 [:semicolon nil [:!s-mode :!d-mode :!f-mode :!g-mode]
                  {:alone {:key :semicolon :halt true}
                   :delayed {:canceled {:key :semicolon}}
                   :held {:key :left_control :lazy :true}}]]}

        {:des "Double tap `left_shift` key to enable capslock"
         :rules [[:##left_shift [:caps_lock ["caps-lock-on" 0]] ["caps-lock-on" 1]]
                 [:##left_shift
                  [["caps-lock-on" 1] :left_shift]
                  ["caps-lock-on" 0]
                  {:delayed {:invoked ["caps-lock-on" 0] :canceled ["caps-lock-on" 0]} :params {:delay 300}}]]}

        {:des "Double tap `right_shift` key to switch input setting"
         :rules [[:right_shift [:!Oz ["macos-input-source" 0]] ["macos-input-source" 1]]
                 [:right_shift
                  [["macos-input-source" 1] :right_shift]
                  ["macos-input-source" 0]
                  {:delayed {:invoked ["macos-input-source" 0] :canceled ["macos-input-source" 0]} :params {:delay 300}}]]}]

 :applications {:Terminals ["^com\\.github\\.wez\\.wezterm$"
                            "^com\\.apple\\.Terminal$"
                            "^com\\.googlecode\\.iterm2$"
                            "^io\\.alacritty"]
                :Discord   ["^com\\.hnc\\.Discord"]
                :Element   ["^im\\.riot\\.nightly$"]
                :Messenger ["^com\\.facebook\\.archon\\.developerID$"]
                :Finder    ["^com\\.apple\\.finder$"]
                :VSCODE    ["^com\\.microsoft\\.VSCode"]
                :Emacs     ["^org\\.gnu\\.Emacs"]
                :Browsers  ["^org\\.mozilla\\.firefox$"
                            "^org\\.mozilla\\.firefoxdeveloperedition$"
                            "^com\\.microsoft\\.edgemac\\.Beta$"
                            "^com\\.microsoft\\.edgemac\\.Dev$"
                            "^com\\.microsoft\\.edgemac$"
                            "^com\\.google\\.Chrome$"
                            "^org\\.chromium\\.Chromium$"
                            "^com\\.google\\.Chrome\\.canary$"
                            "^com\\.apple\\.Safari$"]
                :Edge      ["^com\\.microsoft\\.edgemac\\.Beta$"
                            "^com\\.microsoft\\.edgemac\\.Dev$"
                            "^com\\.microsoft\\.edgemac$"]
                :Firefoxes ["^org\\.mozilla\\.firefox$"
                            "^org\\.mozilla\\.firefoxdeveloperedition$"]}
 :devices {:keychron [{:vendor_id 1452 :product_id 591}
                      {:vendor_id 13364 :product_id 560}]}
 :input-sources {:us {:input_mode_id ""
                      :input_source_id "com.apple.keylayout.ABC"
                      :language "en"}}}
