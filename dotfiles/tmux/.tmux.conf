# Sensible
#-------------------------------------------------
set -g default-terminal "${TERM}"

set -g set-titles on
set -g set-titles-string '#T #S:#I.#P #W'

setw -g automatic-rename on
setw -g xterm-keys on

# Reattach each new window to the user bootstrap namespace
if-shell \
  'test "$(uname -s)" = Darwin' \
  'set -g default-command "exec reattach-to-user-namespace -l /run/current-system/sw/bin/fish"'

# Always honor extended keys, fixes Alacritty mods.
set-option -s -a extended-keys always

# Start windows and panes from 1
set -g base-index 1
setw -g pane-base-index 1

# Scrollback buffer size increase
set -g history-limit 20000

# Limit buffer stack
set -g buffer-limit 20

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# Allow the arrow key to be used immediately after changing windows, default is 500
set -g repeat-time 300

# focus events enabled for terminals that support them
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Visual notifications
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off

# Window Monitoring
setw -g monitor-activity on
setw -g monitor-silence 0

# Bind vi key-mapping
set -g status-keys vi
setw -g mode-keys vi

# Allows scrolling and selecting in copy-mode
set -g -q mouse on

# Enable clipboard
set -g set-clipboard on

# Key bindings
#-------------
# Act like GNU screen, use C-a instead of C-b
unbind-key C-b
set -g prefix C-Space

# Open new window from current path
bind-key c new-window -c "#{pane_current_path}"

# Create new session
bind-key N new-session

# Kill a session
bind-key D choose-tree -sf "kill-session -t '%%'"

# Use v and g for splitting panes from current path
unbind-key %
unbind-key '"'
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key -n "C-;" switch-client -n
bind-key -n "C-'" next-window
bind-key -n "C-t" resize-pane -Z

# Pane navigation
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Pane resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# See: https://github.com/aserowy/tmux.nvim
is_vim_or_emacs="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|emacs)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim_or_emacs" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim_or_emacs" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim_or_emacs" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim_or_emacs" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Force a reload of the config file
bind-key R source-file $HOME/.config/tmux/.tmux.conf \; display "Config reloaded"

# Look 'n Feel
# ------------

# only show status bar if there is more then one window
# https://schauderbasis.de/posts/hide_tmux_status_bar_if_its_not_needed/
set -g status off
set-hook -g after-new-window      'if "[ #{session_windows} -gt 1 ]" "set status on"'
set-hook -g after-kill-pane       'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g pane-exited           'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'

# source-file $HOME/.config/tmux/themer/transparent.tmuxtheme
run -b '$HOME/.config/tmux/themer/catppuccin.tmuxtheme'

set -g default-shell '/run/current-system/sw/bin/fish'
set -g default-command '/run/current-system/sw/bin/fish'

# Plugins
# -------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'fcsonline/tmux-thumbs'

set -g @continuum-restore 'off'
set -g @continuum-save-interval '0'
set -g @resurrect-capture-pane-contents 'on'

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
#  vim: set ft=tmux ts=2 sw=2 tw=80 noet :
