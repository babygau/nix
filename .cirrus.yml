# global env values
env:
  CACHIX_AUTH_TOKEN: ENCRYPTED[6ec41bc0a9aa1bb9677031de8d8b250b327028dca92b197809e7478c773570c5172e4827e5fbb6e1a7fef5546994c09b]
  CACHIX_USER: bangedorrunt
  CIRRUS_SHELL: bash -il
  DARWIN_BUILD_IMAGE: ghcr.io/cirruslabs/macos-monterey-base:latest
  LINUX_BUILD_IMAGE: nixos/nix:latest
  NIX_INSTALL_URL: https://nixos.org/nix/install
  SUDO: sudo

build_template: &BUILD_TEMPLATE
  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_TAG != "" || $CIRRUS_PR != "" || $CIRRUS_BUILD_SOURCE == ""
  name: build_${CIRRUS_OS}_${ARCH}
  timeout_in: 120m
  enable_flake_script: echo "experimental-features = nix-command flakes" | $SUDO tee -a /etc/nix/nix.conf
  install_cachix_script: nix-env -iA cachix -f https://cachix.org/api/v1/install && cachix use bangedorrunt
  flake_check_script: cachix watch-exec $CACHIX_USER -- nix flake check -j auto --system ${ARCH//arm/aarch}-${CIRRUS_OS} -v --show-trace --accept-flake-config

build_darwin_task:
  macos_instance:
    image: $DARWIN_BUILD_IMAGE
  # env:
  #   matrix:
  #     ARCH: arm64
  #     ARCH: x86_64
  # TODO: this is a stupid way to set up the build matrix, but yaml lint yells at me if I do it the other way
  matrix:
    - env:
        ARCH: arm64
    - env:
        ARCH: x86_64
  install_rosetta_script: softwareupdate --install-rosetta --agree-to-license
  install_nix_script: bash <(curl -L "$NIX_INSTALL_URL") --daemon
  enable_multi_arch_script: echo "extra-platforms = x86_64-darwin aarch64-darwin" | sudo tee -a /etc/nix/nix.conf
  enable_trusted_users_script: echo "trusted-users = root admin" | sudo tee -a /etc/nix/nix.conf
  kickstart_nix_daemon_script: sudo launchctl kickstart -k system/org.nixos.nix-daemon
  <<: *BUILD_TEMPLATE

build_linux_task:
  matrix:
    - arm_container:
        image: $LINUX_BUILD_IMAGE
        cpu: 4
        memory: 12G
      env:
        ARCH: arm64
    - container:
        image: $LINUX_BUILD_IMAGE
        cpu: 4
        memory: 12G
      env:
        ARCH: x86_64
  env:
    SUDO: ""
  <<: *BUILD_TEMPLATE
